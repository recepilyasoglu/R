library(ggplot2)
library(DBI)
library(dplyr)
library(dbplyr)
library(ggplot2)
install.packages("sparklyr")
library(sparklyr)
library(nycflights13)
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
spark_install(version = "2.4.3", hadoop_version = "2.7")
sc <- spark_connect(master = "local")
spark_install()
spark_install()
sc <- spark_connect(master = "local")
copy_to(sc, nycflights::flights, "flights_spark")
library(dplyr)
library(dbplyr)
copy_to(sc, nycflights::flights, "flights_spark")
# local.R icindeki dtaframe'i sparka tasıma islemi
copy_to(sc, nycflights13::flights, "flights_spark")
install.packages("sparklyr")
library(sparklyr)
library(nycflights13)
sc <- spark_connect(master = "local")
# local.R icindeki dataframe'i sparka tasıma islemi
copy_to(sc, nycflights13::flights, "flights_spark")
src_tbls(src)
src_tbls(src)
src_tbls(sc)
str(flights_spark)
f_tbl <- copy_to(sc, nycflights13::flights, "flights_spark", overwrite = TRUE)
f_tbl <- copy_to(sc, nycflights13::flights, "flights_spark", overwrite = TRUE)
View(f_tbl)
f_tbl %>% select(1:3)
f_tbl %>% group_by(carrier) %>%
summary(n = n(),
ort = mean(dep_delay))
f_tbl %>% group_by(carrier) %>%
summarise(n = n(),
ort = mean(dep_delay))
f_tbl %>%
group_by(carrier) %>%
summarise(n = n(),
ort = mean(dep_delay))
g <- f_tbl %>%
group_by(carrier) %>%
summarise(n = n(),
ort = mean(dep_delay)) %>%
collect()
View(g)
df <- tibble(
kullanim = c(rep("hi",20), rep("hs",10))
# rep ile hi'den 20, hs den 10 tane urettik
)
df <- tibble(
kullanim = factor(c("hi","hs"), levels = c("hi","hs")),
sure = c(100, 180)
)
library(tibble)
library(dplyr)
library(ggplot2)
df <- tibble(
kullanim = c(rep("hi",20), rep("hs",10))
# rep ile hi'den 20, hs den 10 tane urettik
)
df <- tibble(
kullanim = factor(c("hi","hs"), levels = c("hi","hs")),
sure = c(100, 180)
)
ggplot(df, aes(x = kullanim, y = sure)) + #hi ve hs ye gore almis olduk
geom_bar(stat = "identity")
ggplot(df, aes(x = kullanim, y = sure, group = 1))+
geom_line(colour = "red", linetype = "dashed", size = 1.6) +
geom_point(colour = "red", size = 4, shape = 21, fill = "white" ) +
expand_limits(y = 0)
df <- tibble(
cinsiyet = factor(rep(c("E","K"), each = 500)),
sure = c(rnorm(500, mean = 80), rnorm(500, mean = 81))
)
ggplot(df, aes(sure)) +
geom_histogram(binwidth = .5, colour = "black", fill = "orange")
xlab("Sure Dagilimi") + ylab("Frekans") + ggtitle("Bu bir histogramdır")
df <- tibble(
cinsiyet = factor(rep(c("E","K"), each = 500)),
m = c(rnorm(500, mean = 80), rnorm(500, mean = 82)),
w = c(rnorm(500, mean = 82), rnorm(500, mean = 81))
)
ggplot(df, aes(m, w))+
geom_point()
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(kullanim, sure, fill = kullanim)) +
geom_bar(colour = "black", fill = "orange", stat = "identity")
df <- tibble(
cinsiyet = factor(rep(c("E","K"), each = 500)),
sure = c(rnorm(500, mean = 80), rnorm(500, mean =81)))
ggplot(df, aes(x = cinsiyet, y = sure, fill = cinsiyet)) +
geom_boxplot() +
guides(fill = FALSE)
df <- tibble(
kullanim = factor(c("hi","hs","hi","hs"), levels = c("hi","hs")),
sure = c(100, 180, 90, 200),
cinsiyet = factor(c("E","E","K","K"))
)
ggplot(df, aes(kullanim, cinsiyet)) +
geom_count()
head(economics)
d <- economics
ggplot(d, aes(date, pop)) +
geom_line()
s <- d %>% filter(date > as.Date("2010-1-1"))
ggplot(s, aes(date, pop)) +
geom_line()
df <- economics %>%
select(date, psavert, uempmed) %>%
gather(key = "variable", value ="value", -date)
head(df, 3)
ggplot(df, aes(date, value)) +
geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8))
df <- economics %>%
select(date, psavert, uempmed) %>%
gather(key = "variable", value ="value", -date)
head(df, 3)
ggplot(df, aes(date, value)) +
geom_line(aes(color = variable), size = 1)
# alan grafiği hali
ggplot(df, aes(date, value)) +
geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8))
ggplot(df, aes(date, value)) +
geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8))
ggplot(k, aes(color, ort)) +
geom_bar(stat = "identity", colour = "black", fill= "orange")
mtcars
d <- diamonds
ggplot(d, aes(price)) +
geom_histogram()
ggplot(k, aes(color, ort)) +
geom_bar(stat = "identity", colour = "black", fill= "orange")
k <- d %>% group_by(color) %>% # color' a gore grupladik
summarise(n = n(), ort = mean(price))
ggplot(k, aes(color, ort)) +
geom_bar(stat = "identity", colour = "black", fill= "orange")
ggplot(d, aes(price, fill = color)) +
geom_density()
geom_histogram(binwidth = .5, alpha = .5, position = "identity")
ggplot(df, aes(sure)) +
geom_freqpoly()
ggplot(df, aes(m, w)) +
geom_point()
geom_smooth(method = lm)
ggplot(df, aes(m, w)) +
geom_point()
df <- tibble(
cinsiyet = factor(rep(c("E","K"), each = 500)),
m = c(rnorm(500, mean = 80), rnorm(500, mean = 82)),
w = c(rnorm(500, mean = 82), rnorm(500, mean = 81))
)
ggplot(df, aes(m, w)) +
geom_point()
ggplot(df, aes(m, w)) +
geom_point()
geom_smooth(method = lm)
ggplot(df, aes(m, w))+
geom_point()
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(m, w)) +
geom_point()
geom_smooth()
ggplot(df, aes(m, w)) +
geom_point()+
geom_smooth(method = lm)
ggplot(df, aes(m, w)) +
geom_freqpoly()+
geom_smooth(method = lm)
ggplot(df, aes(m, w)) +
geom_freqpoly()+
geom_smooth(method = lm)
df <- tibble(
cinsiyet = factor(rep(c("E","K"), each = 500)),
m = c(rnorm(500, mean = 80), rnorm(500, mean = 82)),
w = c(rnorm(500, mean = 82), rnorm(500, mean = 81))
)
ggplot(df, aes(m, w)) +
geom_freqpoly()+
geom_smooth(method = lm)
ggplot(df, aes(m, w)) +
geom_freqpoly()
ggplot(df, aes(m, w)) +
geom_point()
ggplot(df, aes(m, w))+
geom_point()+
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(m, w)) +
geom_point()
geom_smooth()
ggplot(df, aes(m, w, colour = cinsiyet)) +
geom_point()
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(m, w)) +
geom_freqpoly()+
geom_smooth(method = lm)
ggplot(df, aes(m)) +
geom_freqpoly()+
geom_smooth(method = lm)
ggplot(df, aes(sure)) +
geom_freqpoly()+
geom_smooth(method = lm)
ggplot(df, aes(m)) +
geom_freqpoly()+
geom_smooth(method = lm
ggplot(df, aes(m)) +
geom_freqpoly()+
geom_smooth(method = lm)
ggplot(df, aes(w)) +
geom_freqpoly()+
geom_smooth(method = lm)
df <- tibble(
cinsiyet = factor(rep(c("E","K"), each = 500)),
m = c(rnorm(500, mean = 80), rnorm(500, mean = 82)),
w = c(rnorm(500, mean = 82), rnorm(500, mean = 81))
)
ggplot(df, aes(w)) +
geom_freqpoly()+
geom_smooth(method = lm)
library(readr)
Gas_Stations <- read_csv("C:/Users/reco1/Downloads/Gas_Stations.csv")
View(Gas_Stations)
str(Gas_Stations)
str(Gas_Stations)
df <- Gas_Stations
View(df)
View(df)
ggplot(d, aes(price)) +
geom_freqpoly()
mtcars
d <- diamonds
ggplot(d, aes(price)) +
geom_freqpoly()
ggplot(df, aes(ADDRID)) +
geom_freqpoly()
View(df)
ggplot(d, aes(price)) +
geom_freqpoly()
wordcloud::wordcloud(v)
res <- XML::readHTMLTable(paste0('http://cran.r-project.org/web/packages/available_packages_by_name.html'), which = 1)
getReaders()
getSources()
v <- Corpus(VectorSource(res$V2))
v
inspect(head(v, 5))
getTransformations()
stopwords("english")
removeWords('To be or not to be.', stopwords("english"))
v <- tm_map(v, content_transformer(tolower))
v <- tm_map(v, removePunctuation)
v <- tm_map(v, stripWhitespace)
inspect(head(v, 5))
wordcloud::wordcloud(v)
library(XML)
library(wordcloud)
library(tm)
res <- XML::readHTMLTable(paste0('http://cran.r-project.org/web/packages/available_packages_by_name.html'), which = 1)
getReaders()
getSources()
v <- Corpus(VectorSource(res$V2))
v
inspect(head(v, 5))
getTransformations()
stopwords("english")
removeWords('To be or not to be.', stopwords("english"))
v <- tm_map(v, content_transformer(tolower))
v <- tm_map(v, removePunctuation)
v <- tm_map(v, stripWhitespace)
inspect(head(v, 5))
v <- tm_map(v, removeNumbers)
tdm <- TermDocumentMatrix(v)
inspect(tdm[1:10, 1:25])
findFreqTerms(tdm, lowfreq = 100)
install.packages("corpus")
library(corpus)
myStopwords <- c('the','via','package','based','using')
install.packages("SnowballC")
library(SnowballC)
wordStem(c('dogs','walk','print','printed','printer','printing'))
d <- v
v <- tm_map(v, stemDocument, language = "english")
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary = dictionary)
x <- paste(x, sep = "", collapse = " ")
PlainTextDocument(stripWhitespace(x))
}
v <- lapply(x, stemCompletion2, dictionary = d)
v <- lapply(v, stemCompletion2, dictionary = d)
