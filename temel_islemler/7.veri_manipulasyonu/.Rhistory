library(nycflights13)
library(dplyr)
df <- flights
View(df)
df <- flights
head(df)
df <- flights
head(df)
str(df)
df <- flights
# once veriyle klasik islemler yapiyoruz
head(df)
str(df)
summary(df)
# kacar tane bu hava yolu sirketlerinden var,
# ve bu hava yolu sirketleri ortalama kacar dk gecikme saglamis
df %>%
select(dep_delay, day, carrier) %>%
filter(dep_delay > 10) %>%
group_by(carrier) %>%
summarise(n = n(),
ortalama = dep_delay
)
# kacar tane bu hava yolu sirketlerinden var,
# ve bu hava yolu sirketleri ortalama kacar dk gecikme saglamis
df %>%
select(dep_delay, day, carrier) %>%
filter(dep_delay > 10) %>%
group_by(carrier) %>%
summarise(n = n(),
ortalama = mean(dep_delay)
)
# kacar tane bu hava yolu sirketlerinden var,
# ve bu hava yolu sirketleri ortalama kacar dk gecikme saglamis
df %>%
select(dep_delay, day, carrier) %>%
filter(dep_delay > 10) %>%
group_by(carrier) %>%
summarise(ucus_sayisi = ucus_sayisi(),
ortalama = mean(dep_delay)
)
# kacar tane bu hava yolu sirketlerinden var,
# ve bu hava yolu sirketleri ortalama kacar dk gecikme saglamis
df %>%
select(dep_delay, day, carrier) %>%
filter(dep_delay > 10) %>%
group_by(carrier) %>%
summarise(ucus_sayisi = ucus_sayisi(),
ortalama = mean(dep_delay)
)
# kacar tane bu hava yolu sirketlerinden var,
# ve bu hava yolu sirketleri ortalama kacar dk gecikme saglamis
df %>%
select(dep_delay, day, carrier) %>%
filter(dep_delay > 10) %>%
group_by(carrier) %>%
summarise(ucussayisi = ucussayisi(),
ortalama = mean(dep_delay)
)
# kacar tane bu hava yolu sirketlerinden var,
# ve bu hava yolu sirketleri ortalama kacar dk gecikme saglamis
df %>%
select(dep_delay, day, carrier) %>%
filter(dep_delay > 10) %>%
group_by(carrier) %>%
summarise(ucus = ucus(),
ortalama = mean(dep_delay)
)
# kacar tane bu hava yolu sirketlerinden var,
# ve bu hava yolu sirketleri ortalama kacar dk gecikme saglamis
df %>%
select(dep_delay, day, carrier) %>%
filter(dep_delay > 10) %>%
group_by(carrier) %>%
summarise(n = n(),
ortalama = mean(dep_delay)
)
select(df, carrier, flight, tailnum)
select(df, carrier, flight, origin:hour) # origin den saat degiskenine kadar gitsin
select(df, carrier, flight, tailnum)
select(df, carrier, flight, origin:hour) # origin den saat degiskenine kadar gitsin
select(df, 1:3)
select(df, carrier, flight, tailnum)
select(df, carrier, flight, origin:hour) # origin den saat degiskenine kadar gitsin
select(df, 1:3)
select(df, -carrier)
select(df, carrier, flight, tailnum)
select(df, carrier, flight, origin:hour) # origin den saat degiskenine kadar gitsin
select(df, 1:3)
select(df, -carrier)
select(df, carrier, flight, tailnum)
select(df, carrier, flight, origin:hour) # origin den saat degiskenine kadar gitsin
select(df, 1:3)
select(df, -carrier) # carrier degiskeni artik yok istemedik onu
select(df, -c(carrier, tailnum))
select(df, carrier, flight, tailnum)
select(df, carrier, flight, origin:hour) # origin den saat degiskenine kadar gitsin
select(df, 1:3)
select(df, -carrier) # carrier degiskeni artik yok istemedik onu
select(df, -c(carrier, tailnum)) # birden fazla degisken disarda birakma
select(df, -c(origin:hour))
select(df, contains("time"))
select(df, contains("time")) # herhangi bir yerinde "time" gecen degiskenleri getirdi
select(df, starts_with("time"))
select(df, contains("time")) # herhangi bir yerinde "time" gecen degiskenleri getirdi
select(df, starts_with("dep"))
select(df, ends_with("delay"))
m <- matrix(1:25, 5,5)
colnames(m) <- paste("x", 1:5, sep = "")
View(m)
m
m <- matrix(1:25, 5,5)
colnames(m) <- paste("x", 1:5, sep = "") # sutunlari isimlendirdik
m
select(as.data.frame(m), num_range("x", 1:3))
select(df, carrier, tailnum, contains("time"))
filter(df, year == 2013)
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month ==2)
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2, & day == 18)
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000)
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000) #1000 dk'dan fazla gecikmesi olan havayollari
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000) #1000 dk'dan fazla gecikmesi olan havayollari
filter(df, dep_delay > mean(dep_delay))
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000) #1000 dk'dan fazla gecikmesi olan havayollari
r <- filter(df, dep_delay > mean(dep_delay))
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000) #1000 dk'dan fazla gecikmesi olan havayollari
r <- filter(df, dep_delay > mean(dep_delay))
r
View(r)
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000) #1000 dk'dan fazla gecikmesi olan havayollari
filter(df, dep_delay > mean(df$dep_delay, na.rm = TRUE))
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000) #1000 dk'dan fazla gecikmesi olan havayollari
# kalkis gecikmesi, kaliks gecikmesi ortalamasindan buyuk olanlari alalim
filter(df, dep_delay > mean(df$dep_delay, na.rm = TRUE))
# "na.rm"  argumani bos gozlemleri sil= TRUE yani evet sil
filter(df, year == 2013) # yil 2013 olanlari aldik
filter(df, year ==2013 & month == 2)
filter(df, year == 2013 & month == 2 & day == 18)
filter(df, dep_delay > 1000) #1000 dk'dan fazla gecikmesi olan havayollari
# kalkis gecikmesi, kaliks gecikmesi ortalamasindan buyuk olanlari alalim
filter(df, dep_delay > mean(df$dep_delay, na.rm = TRUE))
# "na.rm"  argumani bos gozlemleri sil= TRUE yani evet sil
# hem ortalamasindan hem de standart sapmasindan buyuk olanlari getir
filter(df, dep_delay > mean(df$dep_delay, na.rm = TRUE) + sd(df$dep_delay, na.rm = TRUE))
a <- select(df, dep_delay, mont, day)
a <- select(df, dep_delay, month, day)
arrange(a, dep_delay, month, day)
# kucukten buyuge, buyukten kucuge siralamaya yarar
a <- select(df, dep_delay, month, day)
arrange(a, desc(dep_delay), month, day)
b <- arrange(a, desc(dep_delay), month, day)
# kucukten buyuge, buyukten kucuge siralamaya yarar
a <- select(df, dep_delay, month, day)
arrange(a, dep_delay, month, day) # kucukten buyuge siraladik dep_delaye gore
arrange(a, desc(dep_delay), month, day) # buyukten kucuge siraladik yukardakini tam tersi
b <- arrange(a, desc(dep_delay), month, day)
filter(a, dep_delay > 0)
# yukardakinin pipe'li halini yazalim
df %>%
filter(month == 2, day == 18) %>%
select(dep_delay, month) %>%
arrange(desc(dep_delay), month)
df %>%
df %>% sample_frac(0.05)
df %>% sample_frac(0.05)
df %>% sample_frac(0.05)
# icinden 100 tane degiskeni rastgele secmek istedigimizde kullanilir
df %>% sample_n(100)
# pozisyona gore secim, 1 den 100 e kadar secsin
df %>% slice(199:299)
# ilk n degeri alacak sekilde secim islemi sagliyor
df %>% top_n(10) # ilk 10 gozlemi getirdi
sample <- df %>%
sample_n(1000) %>%
select(arr_delay, dep_delay, distance, arr_time)
View(sample)
sample <- df %>%
sample_n(1000) %>% # 1000 tane gozlem aldik
select(arr_delay, dep_delay, distance, arr_time) # bu degiskenleri getir
mutate(sample,
kazanc = arr_delay - dep_delay, # varis gecikmesinden kalkis gecikmesini ifade ettik
hiz = distance / arr_time * 60
)
sample <- df %>%
sample_n(1000) %>% # 1000 tane gozlem aldik
select(arr_delay, dep_delay, distance, arr_time) # bu degiskenleri getir
mutate(sample,
kazanc = arr_delay - dep_delay, # varis gecikmesinden kalkis gecikmesini ifade ettik
hiz = distance / arr_time * 60
)
sample <- df %>%
sample_n(1000) %>% # 1000 tane gozlem aldik
select(arr_delay, dep_delay, distance, arr_time) # bu degiskenleri getir
mutate(sample,
kazanc = arr_delay - dep_delay, # varis gecikmesinden kalkis gecikmesini ifade ettik
hiz = distance / arr_time * 60 # mesafe / varis zamani * 60 = hiz
yeni = kazanc / hiz
)
sample <- df %>%
sample_n(1000) %>% # 1000 tane gozlem aldik
select(arr_delay, dep_delay, distance, arr_time) # bu degiskenleri getir
mutate(sample,
kazanc = arr_delay - dep_delay, # varis gecikmesinden kalkis gecikmesini ifade ettik
hiz = distance / arr_time * 60 # mesafe / varis zamani * 60 = hiz
yeni = kazanc / hiz
)
sample <- df %>%
sample_n(1000) %>% # 1000 tane gozlem aldik
select(arr_delay, dep_delay, distance, arr_time) # bu degiskenleri getir
mutate(sample,
kazanc = arr_delay - dep_delay, # varis gecikmesinden kalkis gecikmesini ifade ettik
hiz = distance / arr_time * 60, # mesafe / varis zamani * 60 = hiz
yeni = kazanc / hiz
)
rename(df,
varis_gecikmesi = arr_delay,
kalkis_gecikmesi = dep_delay
)
rename(df,
varis_gecikmesi = arr_delay,
kalkis_gecikmesi = dep_delay
)
rename(df,
varis_gecikmesi = arr_delay,
kalkis_gecikmesi = dep_delay
)
# eger yeni degisken olustururken eski degiskenleri istemitorsak trans_mute kullaniyoruz
transmute(sample,
kazanc = arr_delay - dep_delay, # varis gecikmesinden kalkis gecikmesini ifade ettik
hiz = distance / arr_time * 60, # mesafe / varis zamani * 60 = hiz
yeni = kazanc / hiz
)
df %%
df %>% group_by(carrier)
df %>% group_by(carrier)
# hava yolu sirketine gore grupladik
df %>% group_by(carrier)
df %>% group_by(carrier) %>%
summarise(ucus_sayisi = n(), # ruplama isleminde sonra saydirmak istersek n fonskiyonunu kullaniriz n orda sabit sayi bir fonksiyon
ortalama = mean(dep_delay, na.rm = TRUE),
medyan = median(dep_delay)
)
# hava yolu sirketine gore grupladik
df %>% group_by(carrier)
df %>% group_by(carrier) %>%
summarise(ucus_sayisi = n(), # ruplama isleminde sonra saydirmak istersek n fonskiyonunu kullaniriz n orda sabit sayi bir fonksiyon
ortalama = mean(dep_delay, na.rm = TRUE),
medyan = median(dep_delay, na.rm = TRUE)
)
# hava yolu sirketine gore grupladik
df %>% group_by(carrier)
df %>% group_by(carrier) %>%
summarise(ucus_sayisi = n(), # ruplama isleminde sonra saydirmak istersek n fonskiyonunu kullaniriz n orda sabit sayi bir fonksiyon
ortalama = mean(dep_delay, na.rm = TRUE),
medyan = median(dep_delay, na.rm = TRUE),
sd = sd(dep_delay, na.rm = TRUE)
)
# hava yolu sirketine gore grupladik
df %>% group_by(carrier)
df %>% group_by(carrier) %>%
summarise(ucus_sayisi = n(), # ruplama isleminde sonra saydirmak istersek n fonskiyonunu kullaniriz n orda sabit sayi bir fonksiyon
ortalama = mean(dep_delay, na.rm = TRUE),
medyan = median(dep_delay, na.rm = TRUE),
sd = sd(dep_delay, na.rm = TRUE)
)
# hava yolu sirketine gore grupladik
df %>% group_by(carrier)
df %>% group_by(carrier) %>%
summarise(ucus_sayisi = n(), # ruplama isleminde sonra saydirmak istersek n fonskiyonunu kullaniriz n orda sabit sayi bir fonksiyon
ortalama = mean(dep_delay, na.rm = TRUE), # ortalamasi dep_delayin
medyan = median(dep_delay, na.rm = TRUE), # medyani dep_delayin
sd = sd(dep_delay, na.rm = TRUE), # standart sapmasi dep_delayin
var = var(dep_delay, na.rm = TRUE)
)
# hava yolu sirketine gore grupladik
df %>% group_by(carrier)
df %>% group_by(carrier) %>%
summarise(ucus_sayisi = n(), # gruplama isleminde sonra saydirmak istersek n fonskiyonunu kullaniriz n orda sabit sayi bir fonksiyon
ortalama = mean(dep_delay, na.rm = TRUE), # ortalamasi dep_delayin
medyan = median(dep_delay, na.rm = TRUE), # medyani dep_delayin
sd = sd(dep_delay, na.rm = TRUE), # standart sapmasi dep_delayin
var = var(dep_delay, na.rm = TRUE), # varyansi dep_delayin
ort_uzaklik = mean(distance, na.rm = TRUE)
)
# genel olarak hava yolu sirketlerine ait gecikmelerle ilgili islemlerde bulunduk
install.packages("tidyverse")
library(tidyverse)
table1
table2
table3
table4a
table4b
table4a
# duzensiz veri tablosunu sectik, kacan degerleri duzelticez
# getirmek istedigimiz degiskenin degerler,
# getirdikten sonra bu degiskenin adi ne olacak
table4a %>% gather(`1999`, `2000`, key = "year", value = "cases")
# duzensiz veri tablosunu sectik, kacan degerleri duzelticez
# getirmek istedigimiz degiskenin degerler,
# getirdikten sonra bu degiskenin adi ne olacak
# kalan degerleri de value ile cases adinda topladik,
# cunku duzenli tablo da cases'ın altindaydilar
table4a %>% gather(`1999`, `2000`, key = "year", value = "cases")
# burdaki de populationu bozmuslar onu duzelticez
table4b
# burdaki de populationu bozmuslar onu duzelticez
table4b %>% gather(`1999`, `2000`,key = "population", value = "cases")
# burdaki de populationu bozmuslar onu duzelticez
table4b %>% gather(`1999`, `2000`,key = "year", value = "population")
tidy_a <- table4a %>% gather(`1999`, `2000`, key = "year", value = "cases")
tidy_b <- table4b %>% gather(`1999`, `2000`, key = "year", value = "population")
tidy_a <- table4a %>% gather(`1999`, `2000`, key = "year", value = "cases")
tidy_b <- table4b %>% gather(`1999`, `2000`, key = "year", value = "population")
left_join(tidy_a, tidy_b)
table2
# asagidaki degiskenleri cases ve population' ları yukariya getirmemiz gerekli
table2 %>% spread(cases, population, key = "cases", value = "population")
# asagidaki degiskenleri cases ve population' lari yukariya getirmemiz gerekli
# yukardakileri de asagiya indirmemiz gerekir
table2 %>% spread(cases, population, key = "type", value = "count")
# asagidaki degiskenleri cases ve population' lari yukariya getirmemiz gerekli
# yukardakileri de asagiya indirmemiz gerekir
spread(table2, key = "type", value = "count")
table2 %>% spread(table2, key = "type", value = "count")
table2 %>% spread(cases, key = "type", value = "count")
table2 %>% spread(population, key = "type", value = "count")
table2 %>% spread(cases+population, key = "type", value = "count")
table2 %>% spread(key = "type", value = "count")
table3
# seperaing ayirmak demektir
# bu tablodaki rate degiskeninde yer alan cases/population'u ayirmak istiyoruz
table3 %>%
seperate(rate, into = c("cases","population"), sep = "/", conver = TRUE)
# separating ayirmak demektir
# bu tablodaki rate degiskeninde yer alan cases/population'u ayirmak istiyoruz
table3 %>%
separate(rate, into = c("cases","population"), sep = "/", conver = TRUE)
# separating ayirmak demektir
# bu tablodaki rate degiskeninde yer alan cases/population'u ayirmak istiyoruz
table3 %>%
separate(rate, into = c("cases","population"), sep = "/", convert = TRUE)
# sirasiyla rate' i sectik degistirmek istedigimiz,
# into diyerek rate yerine yazmak istediklerimizi yazdik,
# sep diyerek aradaki ayraci tanimladik
table5
# bu da birlestirme demek
# table 5 deki century ve year'i birlestirmemiz lazim
#rate'i de yina ayirmak gerekebilir
table5 %>%
unite(new, century, year, sep = "" )
table5 %>% unite(year, century, year, sep="")
